on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: live-api

jobs:
  live-api:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install grpc/protoc
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install build-essential autoconf libtool pkg-config
          git clone -b v1.33.2 https://github.com/grpc/grpc
          cd grpc
          git submodule update --init
          sudo ./test/distrib/cpp/run_distrib_test_cmake_module_install_pkgconfig.sh
          cd ..
          sudo rm -R grpc

      - name: Install grpc/protoc
        if: runner.os == 'MacOS'
        run: |
          brew install openssl
          brew install grpc

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          BIGRQUERY_PASSWORD: ${{ secrets.BIGRQUERY_PASSWORD }}
          BIGQUERY_TEST_PROJECT: gargle-169921
          BIGQUERY_TEST_BUCKET: bigrquery-test-bucket-calliope
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: live-api-results
          path: check

      - name: Reveal testthat details
        run: find . -name testthat.Rout -exec cat '{}' ';'
